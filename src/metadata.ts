/* eslint-disable */
export default async () => {
    const t = {
        ["./users/entities/user.entity"]: await import("./users/entities/user.entity"),
        ["./roles/entities/roles.entity"]: await import("./roles/entities/roles.entity"),
        ["./roles/dto/action-role-relationships.dto"]: await import("./roles/dto/action-role-relationships.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./roles/entities/roles.entity"), { "Roles": { id: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String }, is_admin: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date }, user: { required: true, type: () => [t["./users/entities/user.entity"].User] } } }], [import("./users/entities/user.entity"), { "User": { id: { required: true, type: () => Number }, full_name: { required: true, type: () => String }, email: { required: true, type: () => String }, mobile: { required: true, type: () => String }, is_admin: { required: true, type: () => Number }, role_id: { required: true, type: () => Number }, code_caddie: { required: true, type: () => String }, user_name: { required: true, type: () => String }, is_active: { required: true, type: () => Boolean }, type: { required: true, type: () => String }, gender: { required: true, type: () => String }, birthday: { required: true, type: () => Date }, workingday: { required: true, type: () => Date }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date }, role: { required: true, type: () => t["./roles/entities/roles.entity"].Roles } } }], [import("./auth/dto/sign-in.dto"), { "SignInDto": { userName: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 8, maxLength: 20 } } }], [import("./auth/dto/sign-up.dto"), { "SignUpDto": { email: { required: true, type: () => String }, fullName: { required: true, type: () => String }, type: { required: true, type: () => String }, roleId: { required: true, type: () => Number }, isAdmin: { required: true, type: () => Number }, userName: { required: true, type: () => String, maxLength: 255 }, password: { required: true, type: () => String, minLength: 8, maxLength: 20, pattern: "/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" }, passwordConfirm: { required: true, type: () => String }, mobile: { required: true, type: () => String }, gender: { required: true, type: () => String }, birthday: { required: true, type: () => Date }, workingday: { required: true, type: () => Date } } }], [import("./users/entities/caddie-score.entity"), { "CaddieScore": { id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, code_caddie: { required: true, type: () => String }, note: { required: true, type: () => String }, lto: { required: true, type: () => String }, score: { required: true, type: () => Number }, created_at: { required: true, type: () => Date } } }], [import("./users/entities/caddie-booking.entity"), { "CaddieBooking": { id: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, code_caddie: { required: true, type: () => String }, total_booking: { required: true, type: () => Number }, created_at: { required: true, type: () => Date } } }], [import("./users/dto/create-caddie.dto"), { "SignUpCaddieDto": { email: { required: true, type: () => String }, codeCaddie: { required: true, type: () => String }, mobile: { required: true, type: () => String }, fullName: { required: true, type: () => String }, gender: { required: true, type: () => String }, birthday: { required: true, type: () => Date }, workingday: { required: true, type: () => Date } } }], [import("./users/dto/create-caddie-score.dto"), { "CreateCaddieScoreDto": { codeCaddie: { required: true, type: () => String, maxLength: 11 }, userId: { required: true, type: () => Number, maxLength: 11 }, note: { required: true, type: () => String, maxLength: 255 }, lto: { required: true, type: () => String, maxLength: 255 }, score: { required: true, type: () => Number } } }], [import("./users/dto/create-caddie-booking.dto"), { "CreateCaddieBookingDto": { codeCaddie: { required: true, type: () => String, maxLength: 11 }, userId: { required: true, type: () => Number }, totalBooking: { required: true, type: () => Number } } }], [import("./branch/dto/action-branch.dto"), { "actionBranchDto": { cityId: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, address: { required: true, type: () => String } } }], [import("./branch/entities/branch.entity"), { "Branch": { id: { required: true, type: () => Number }, city_id: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, address: { required: true, type: () => String }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date } } }], [import("./branch/entities/branch-manager.entity"), { "BranchManager": { id: { required: true, type: () => Number }, branch_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean } } }], [import("./branch/dto/action-branch-manager.dto"), { "actionBranchManagerDto": { branchId: { required: true, type: () => Number, maxLength: 11 }, userId: { required: true, type: () => Number, maxLength: 11 } } }], [import("./group/entities/group.entity"), { "Group": { id: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date } } }], [import("./module/entities/module.entity"), { "ModuleEntity": { id: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date } } }], [import("./module/dto/action-module.dto"), { "actionModuleDto": { code: { required: true, type: () => String }, name: { required: true, type: () => String } } }], [import("./roles/entities/role-relationship.entity"), { "RolesRelationship": { id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, role_id: { required: true, type: () => Number }, controller_id: { required: true, type: () => Number }, action_id: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date } } }], [import("./roles/entities/roles-action.entity"), { "RolesAction": { id: { required: true, type: () => Number }, controller_id: { required: true, type: () => Number }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, is_admin: { required: true, type: () => Number }, is_user: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date } } }], [import("./roles/entities/roles-controller.entity"), { "RolesControllers": { id: { required: true, type: () => Number }, module_id: { required: true, type: () => Number }, parent_id: { required: true, type: () => Number }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, is_admin: { required: true, type: () => Number }, is_user: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date } } }], [import("./roles/entities/roles-module.entity"), { "RolesModule": { id: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String } } }], [import("./roles/dto/action-roles.dto"), { "ActionRolesDto": { code: { required: true, type: () => String }, name: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, isAdmin: { required: true, type: () => Number }, isSelectOption: { required: true, type: () => Number }, isUser: { required: true, type: () => Number, maxLength: 11 } } }], [import("./roles/dto/action-roles-module.dto"), { "ActionRolesModuleDto": { code: { required: true, type: () => String, maxLength: 255 }, name: { required: true, type: () => String, maxLength: 255 } } }], [import("./roles/dto/action-roles-controller.dto"), { "ActionRolesControllerDto": { moduleId: { required: true, type: () => Number }, parentId: { required: true, type: () => Number }, name: { required: true, type: () => String, maxLength: 255 }, description: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, isAdmin: { required: true, type: () => Number }, isUser: { required: true, type: () => Number } } }], [import("./roles/dto/action-roles-action.dto"), { "ActionRolesActionDto": { controllerId: { required: true, type: () => Number }, name: { required: true, type: () => String, maxLength: 255 }, description: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, isAdmin: { required: true, type: () => Number }, isUser: { required: true, type: () => Number } } }], [import("./roles/dto/check-permission.dto"), { "checkPermission": { classModule: { required: true, type: () => String, maxLength: 100 }, method: { required: true, type: () => String, maxLength: 100 }, roleId: { required: true, type: () => Number }, userId: { required: true, type: () => Number } } }], [import("./roles/dto/action-role-relationships.dto"), { "ActionRoleRelationshipsDto": { param: { required: true, type: () => [t["./roles/dto/action-role-relationships.dto"].RoleItemRelationshipDto] } }, "RoleItemRelationshipDto": { controllerId: { required: true, type: () => Number }, actionId: { required: true, type: () => Number }, roleId: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, isActive: { required: true, type: () => Boolean } } }], [import("./department/entities/department.entity"), { "Department": { id: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, is_active: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date } } }], [import("./department/entities/department-manager.entity"), { "DepartmentManager": { id: { required: true, type: () => Number }, branch_id: { required: true, type: () => Number }, department_id: { required: true, type: () => String }, user_id: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean } } }], [import("./department/dto/action-department.dto"), { "actionDepartmentDto": { code: { required: true, type: () => String, maxLength: 11 }, name: { required: true, type: () => String, maxLength: 255 }, description: { required: true, type: () => String, maxLength: 255 } } }], [import("./department/dto/action-department-manager.dto"), { "actionDepartmentManagerDto": { branchId: { required: true, type: () => Number, maxLength: 11 }, departmentId: { required: true, type: () => Number, maxLength: 11 }, userId: { required: true, type: () => Number, maxLength: 11 } } }], [import("./department/dto/action-branch-department.dto"), { "actionBranchDepartmentDto": { branchId: { required: true, type: () => Number, maxLength: 11 }, departmentId: { required: true, type: () => Number, maxLength: 11 } } }], [import("./group/entities/group-user.entity"), { "GroupUser": { id: { required: true, type: () => Number }, branch_id: { required: true, type: () => Number }, department_id: { required: true, type: () => Number }, group_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean } } }], [import("./group/entities/group-manager.entity"), { "GroupManager": { id: { required: true, type: () => Number }, branch_id: { required: true, type: () => Number }, department_id: { required: true, type: () => Number }, group_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean } } }], [import("./group/entities/department-group.entity"), { "DepartmentGroup": { id: { required: true, type: () => Number }, branch_id: { required: true, type: () => Number }, department_id: { required: true, type: () => Number }, group_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean } } }], [import("./group/dto/action-group.dto"), { "actionGroupDto": { code: { required: true, type: () => String, maxLength: 11 }, name: { required: true, type: () => String, maxLength: 255 }, description: { required: true, type: () => String, maxLength: 255 } } }], [import("./group/dto/action-group-manager.dto"), { "actionGroupManagerDto": { branchId: { required: true, type: () => Number }, departmentId: { required: true, type: () => Number }, groupId: { required: true, type: () => Number, maxLength: 11 }, userId: { required: true, type: () => Number, maxLength: 11 } } }], [import("./group/dto/action-group-user.dto"), { "actionGroupUserDto": { branchId: { required: true, type: () => Number, maxLength: 11 }, departmentId: { required: true, type: () => Number, maxLength: 11 }, groupId: { required: true, type: () => Number, maxLength: 11 }, userId: { required: true, type: () => Number, maxLength: 11 } } }], [import("./group/dto/action-department-group.dto"), { "actionDepartmentGroupDto": { branchId: { required: true, type: () => Number, maxLength: 11 }, departmentId: { required: true, type: () => Number, maxLength: 11 }, groupId: { required: true, type: () => Number, maxLength: 11 } } }], [import("./roles/dto/action-role-relationship.dto"), { "ActionRoleRelationshipDto": { controllerId: { required: true, type: () => Number }, actionId: { required: true, type: () => Number }, roleId: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, isActive: { required: true, type: () => Boolean } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String } } }], [import("./auth/auth.controller"), { "AuthController": { "signUp": {}, "signIn": {}, "signOut": {} } }], [import("./users/users.controller"), { "UsersController": { "getMe": {}, "signUpCaddie": {}, "createScoreCaddie": {}, "createBookingCaddie": {}, "getScoreByCaddieCode": {}, "getCaddieOrderByBooking": { type: t["./users/entities/user.entity"].User }, "getCaddieBooking": { type: t["./users/entities/user.entity"].User }, "getAllUser": {}, "editUser": {} } }], [import("./branch/branch.controller"), { "BranchController": { "create": {}, "update": {}, "addUsersManager": {} } }], [import("./module/module.controller"), { "ModuleController": { "create": {}, "getAllModule": {} } }], [import("./roles/roles.controller"), { "RolesController": { "checkPermission": {}, "createPermission": { type: Object }, "createRoles": { type: Object }, "createRolesModules": { type: Object }, "createRolesController": { type: Object }, "createRolesAction": { type: Object }, "getAllController": {}, "getAllAction": {}, "getAllRoles": {} } }], [import("./department/department.controller"), { "DepartmentController": { "create": { type: Object }, "update": { type: Object } } }], [import("./group/group.controller"), { "GroupController": { "create": {}, "update": {}, "addManager": {}, "addUsersToGroup": {} } }]] } };
};